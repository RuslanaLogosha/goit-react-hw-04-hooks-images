{"version":3,"sources":["components/pixabay-api.js","components/ImagesErrorView/ImagesErrorView.js","components/ImagePendingView/ImagePendingView.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["api","fetchImages","requestKey","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","ImagePendingView","className","type","color","height","width","Component","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","console","log","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","event","currentTarget","target","ImageGalleryItem","largeImageUrl","useState","showModal","setShowModal","toggleModal","ImageGallery","images","map","webformatURL","tags","largeImageURL","id","Button","scroll","scrollToBottom","Searchbar","onSubmit","setRequestKey","preventDefault","trim","toast","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","Status","App","error","setError","status","setStatus","setPage","setImages","pixabayApi","prevState","hits","catch","finally","newRequestKey","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c371c20.chunk.js","sourcesContent":["const API_KEY = '18957101-8b16af6433f6d6830b4844a72';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(requestKey, page) {\n  const url = `${BASE_URL}?q=${requestKey}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;","import PropTypes from 'prop-types';\n\nfunction ImagesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImagesErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImagesErrorView;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImagePendingView extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#303f9f\"\n        height={50}\n        width={50}\n      />\n    );\n  }\n}\n\nexport default ImagePendingView;","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ src, alt, onClose }) {\n  useEffect(() => {\n    console.log('mount');\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      console.log('unmount');\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        onClick={toggleModal}\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItemImage\"\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ webformatURL, tags, largeImageURL, id }) => (\n        <ImageGalleryItem\n          src={webformatURL}\n          alt={tags}\n          largeImageUrl={largeImageURL}\n          key={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import { animateScroll as scroll } from 'react-scroll';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  const scrollFunction = () => {\n    onClick();\n    scroll.scrollToBottom();\n  };\n\n  return (\n    <button onClick={scrollFunction} className=\"Button\" type=\"button\">\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [requestKey, setRequestKey] = useState('');\n\n  const handleRequestChange = event => {\n    setRequestKey(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (requestKey.trim() === '') {\n      toast('Введите запрос.');\n      return;\n    }\n\n    onSubmit(requestKey);\n    setRequestKey('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={requestKey}\n          onChange={handleRequestChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport './app.css';\n\nimport pixabayApi from './components/pixabay-api';\nimport ImagesErrorView from './components/ImagesErrorView';\nimport ImagePendingView from './components/ImagePendingView';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Searchbar from './components/Searchbar';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [requestKey, setRequestKey] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n\n  const handleFormSubmit = newRequestKey => {\n    setRequestKey(newRequestKey);\n    setPage(1);\n    setImages([]);\n  };\n\n  useEffect(() => {\n    if (!requestKey) {\n      return;\n    }\n\n    const renderImages = () => {\n      setStatus(Status.PENDING);\n\n      pixabayApi\n        .fetchImages(requestKey, page)\n        .then(response =>\n          setImages(prevState => [...prevState, ...response.hits]),\n        )\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => setStatus(Status.RESOLVED));\n    };\n\n    renderImages();\n  }, [requestKey, page]);\n\n  const onLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      <ToastContainer autoClose={3000} />\n\n      {status === Status.IDLE && (\n        <p className=\"welcomeText\">Please enter your search term</p>\n      )}\n\n      {status === Status.PENDING && <ImagePendingView />}\n\n      {status === Status.REJECTED && (\n        <ImagesErrorView message={error.message} />\n      )}\n\n      {status === Status.RESOLVED && (\n        <>\n          <ImageGallery images={images} />\n          <Button onClick={onLoadMore} />\n        </>\n      )}\n    </>\n  );\n}\n\nApp.propTypes = {\n  requestKey: PropTypes.string,\n  page: PropTypes.number,\n  images: PropTypes.array,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}